import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

#ANN model(feed-forward)
model = Sequential()
model.add(Dense(128, input_dim=49, activation="relu"))
model.add(Dense(64, activation="relu"))
model.add(Dense(32, activation="relu"))
model.add(Dense(1, activation='sigmoid'))
model.summary()

#compile model
model.compile(loss= "binary_crossentropy" , optimizer="rmsprop", metrics=["accuracy"])

# Convert the input arrays to float32
x_train = x_train.astype('float32')
x_test = x_test.astype('float32')
y_train = y_train.astype('float32')
y_test = y_test.astype('float32')

#fit model
model.fit(x_train, y_train, epochs=50, batch_size=128, validation_data=(x_test, y_test))

#accuracy on the training dataset
trainPred=model.predict(x_train)
trainPred=[1 if y>=0.5 else 0  for y in trainPred]
accuracy_score(y_train, trainPred)

#accuracy on the test dataset
y_prediction=model.predict(x_test)
y_prediction=[1 if y>= 0.5 else 0 for y in y_prediction]
accuracy_score(y_test, y_prediction)

confusion_matrix(y_test, y_prediction)

f1_score(y_test, y_prediction)