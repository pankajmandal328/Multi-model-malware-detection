import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Conv1D, MaxPooling1D, Flatten, Dropout

#CNN model
model = Sequential()
model.add(Conv1D(filters=64, kernel_size=3, activation='relu', input_shape=(X.shape[1], 1)))
model.add(MaxPooling1D(pool_size=2))
model.add(Dropout(0.2))
model.add(Conv1D(filters=32, kernel_size=3, activation='relu'))
model.add(MaxPooling1D(pool_size=2))
model.add(Dropout(0.2))
model.add(Flatten())
model.add(Dense(64, activation='relu'))
model.add(Dense(1, activation='sigmoid'))
model.summary()

# Compile and fit model
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(x_train, y_train, epochs=50, batch_size=128)

#accuracy on training dataset
trainPred = model.predict(x_train)
trainPred = [1 if y >= 0.5 else 0 for y in trainPred]
trainAcc = accuracy_score(y_train, trainPred)
print('Train accuracy:', trainAcc)

#accuracy on testing dataset
testPred = model.predict(x_test)
testPred = [1 if y >= 0.5 else 0 for y in testPred]
testAcc = accuracy_score(y_test, testPred)
print('Test accuracy:', testAcc)

confMatrix = confusion_matrix(y_test, testPred)
print('Confusion matrix:', confMatrix)

f1Score = f1_score(y_test, testPred)
print('F1 score:', f1Score)